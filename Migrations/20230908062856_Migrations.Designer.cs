// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UEQData.Models;

#nullable disable

namespace UEQAPI.Migrations
{
    [DbContext(typeof(UEQContext))]
    [Migration("20230908062856_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UEQData.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("UEQData.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("UEQData.Models.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("annoying_enjoyable")
                        .HasColumnType("int");

                    b.Property<int?>("bad_good")
                        .HasColumnType("int");

                    b.Property<int?>("boring_exciting")
                        .HasColumnType("int");

                    b.Property<int?>("cluttered_organized")
                        .HasColumnType("int");

                    b.Property<int?>("complicated_easy")
                        .HasColumnType("int");

                    b.Property<int?>("confusing_clear")
                        .HasColumnType("int");

                    b.Property<int?>("conservative_innovative")
                        .HasColumnType("int");

                    b.Property<int?>("conventional_inventive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("difficultToLearn_easyToLearn")
                        .HasColumnType("int");

                    b.Property<int?>("doesNotMeetExpectations_meetsExpectations")
                        .HasColumnType("int");

                    b.Property<int?>("dull_creative")
                        .HasColumnType("int");

                    b.Property<int?>("impractical_practical")
                        .HasColumnType("int");

                    b.Property<int?>("inefficient_efficient")
                        .HasColumnType("int");

                    b.Property<int?>("inferior_valuable")
                        .HasColumnType("int");

                    b.Property<int?>("moduleId")
                        .HasColumnType("int");

                    b.Property<int?>("motivating_demotivating")
                        .HasColumnType("int");

                    b.Property<int?>("notInteresting_interesting")
                        .HasColumnType("int");

                    b.Property<int?>("notSecure_secure")
                        .HasColumnType("int");

                    b.Property<int?>("notUnderstandable_understandable")
                        .HasColumnType("int");

                    b.Property<int?>("obstructive_supportive")
                        .HasColumnType("int");

                    b.Property<int?>("projectId")
                        .HasColumnType("int");

                    b.Property<int?>("slow_fast")
                        .HasColumnType("int");

                    b.Property<int?>("unattractive_attractive")
                        .HasColumnType("int");

                    b.Property<int?>("unfriendly_friendly")
                        .HasColumnType("int");

                    b.Property<int?>("unlikable_pleasing")
                        .HasColumnType("int");

                    b.Property<int?>("unpleasant_pleasant")
                        .HasColumnType("int");

                    b.Property<int?>("unpredictable_predictable")
                        .HasColumnType("int");

                    b.Property<int?>("usual_leadingEdge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("moduleId");

                    b.HasIndex("projectId");

                    b.ToTable("Questionnaire");
                });

            modelBuilder.Entity("UEQData.Models.Questionnaire", b =>
                {
                    b.HasOne("UEQData.Models.Module", "module")
                        .WithMany()
                        .HasForeignKey("moduleId");

                    b.HasOne("UEQData.Models.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");

                    b.Navigation("module");

                    b.Navigation("project");
                });
#pragma warning restore 612, 618
        }
    }
}
